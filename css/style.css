:root {
  --primary: #911f17;
  --primaryvariant: #5d0000;
  --primary-light: #c8503f;
  --secondary: #b7cadb;
  --secondaryvariant: #b0bec5;
  --secondary-light: #e2f1f8;
  --background: white;
  --surface: #eceff1;
  --error: #c8503f;
  --onprimary: white;
  --onsecondary: black;
  --onbackground: grey;
  --onsurface: black;
  --onerror: white;

  --debug: green;  /* green */

  --default-padding: 20px;
  --button-round: 3px;
  --chip-round: 15px;

  --content-width: 1000px;
}

/* CONTENTS */

html, body {
  font-family: sans-serif;
  font-size: 15px;
  line-height: 1.5em;
  height: 100%;
  margin: 0;
  background-color: var(--background);
}

.container {
  /* border: 1px solid var(--debug); */
  margin: 50px auto;
  width: 70%;
  max-width: var(--content-width);
}

h1, h2, h3 {
  padding-top: 10px;
  font-weight: normal;
  letter-spacing: 2px;
  
}

h2, h3 {
  text-transform: uppercase;
}

/* BUTTONS */

p > a, li > a {
  font-weight: normal;
}

a {
  font-weight: bold;
  text-decoration: none;
  color: var(--primary);
  transition: 0.3s;
}

a:hover {
  color: var(--primaryvariant);
}

p + button, button + button {
  margin-top: 0;
}

button {
  background-color: var(--primary);
  color: var(--onprimary);
  border: none;
  outline: none;
  text-align: center;
  font-weight: bold;
  display: inline-block;
  padding: calc(var(--default-padding)/2);
  margin: calc(var(--default-padding)) 0;
  border-radius: var(--button-round);
}

@media only screen and (min-width: 601px) {
  button + button {
    margin-left: calc(var(--default-padding)/2);
  }

  button {
    padding: calc(var(--default-padding)/2) var(--default-padding);
  }
}

button:hover {
  background-color: var(--primaryvariant);
}

.secondaryButton {
  background-color: var(--background);
  color: var(--onbackground);
  padding: calc(var(--default-padding)/2);
}

.secondaryButton:hover {
  background-color: var(--surface);
}

/* MENU */

.boundary {
  border: 1px solid var(--debug);
  overflow: auto;
  margin: 10px var(--default-padding) 0 var(--default-padding);
}

.pagination-link {
  border: 1px solid var(--debug);
  display: inline-block;  
  padding: 10px;
  text-transform: uppercase;
}

.go-right {
  float: right;
}

.go-left {
  float: left;
}

/* CODE */

pre {
  border: 1px solid var(--secondary);
  padding: 10px;
  overflow-x: scroll;
}

/* RULES FOR RESPONSIVENESS */

.hide-small {
  display: inline-block;
}

.hide-big {
  display: none;
}

@media only screen and (max-width: 600px), print {
  .container {
    width: auto;
    padding: var(--default-padding);
  }

  .hide-small {
    display: none;
  }

  .hide-big {
    display: inline-block;
  }
}

@media print {
  .no-print, .no-print * {
      display: none !important;
  }

  .container > div {
      page-break-inside: avoid;
  }
}

/* FLEX ROWS */

.flexRow {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; 
  box-sizing: border-box;
}

.flexRow:after {
  content: "";
  flex: auto;
}

.flexRowMargins {
  margin: calc(var(--default-padding) * -1) calc(var(--default-padding) * -0.5) 0 calc(var(--default-padding) * -0.5);
}

.flexRowMargins > * {
  margin-top: var(--default-padding);
  padding: 0 calc(var(--default-padding)*0.5);
  box-sizing: border-box;
}

.fifth {
  width: 20%;
}

.quarter {
  width: 25%;
}

.third {
  width: calc(100%/3);
}

.half {
  width: 50%;
}

@media only screen and (max-width: 900px) {
  .fifth, .quarter {
    width: calc(100%/3);
  }

  .third {
    width: 50%;
  }
}

@media only screen and (max-width: 600px) {
  .flexRow > * {
    display: block;
    margin: 0;
    margin-top: var(--default-padding);
  }

  .flexRowMargins {
    margin: calc(var(--default-padding)*-1) 0 0 0;
  }

  .fifth, .quarter, .third, .half {
    width: 100%;
    padding: 0;
  }
}

/* CARDS */

.square {
  position: relative;
  overflow: hidden;
}

.square:after {
  content: "";
  display: block;
  padding-bottom: 100%;
}

.centerSquare {  
  position: absolute;
  width: calc(100% - 2*var(--default-padding));
  padding: var(--default-padding);
  text-align: center;
  top: 50%;
  transform: translateY(-50%);
  display: none;
}

.square:hover > .centerSquare {
  display: initial;
}

.dark-overlay {
  width:100%;
  height:100%;
  position:absolute;
  transition: opacity 0.2s;
  background-color: var(--onsurface);
  opacity: 0.1;
}

.square:hover > .dark-overlay {    
  opacity: 0.3;
}

@media only screen and (max-width: 600px) {
  .centerSquare {
    display: initial;
  }

  .dark-overlay {    
    opacity: 0.3;
  }  
}
